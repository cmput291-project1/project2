import org.junit.runner.JUnitCore;
import org.junit.runner.Result;
import org.junit.runner.notification.Failure;

public class TestRunner {
   public static void main(String[] args) {
		Result result;
		
      result = JUnitCore.runClasses(TestSecondaryDatabase.class);
      for (Failure failure : result.getFailures()) {
         System.out.println(failure.toString());
      }
		System.out.println("===================================================================");
      System.out.println("Secondary database tests were successful? " + result.wasSuccessful());
		System.out.println("Tests:");
		System.out.println("\t Data for every primary key is a secondary key in the indexFile.");		
		System.out.println("===================================================================");

		result = JUnitCore.runClasses(TestDatabase.class);
		for (Failure failure : result.getFailures()) {
         System.out.println(failure.toString());
      }
		System.out.println("===================================================================");
      System.out.println("Database tests were successful? " + result.wasSuccessful());
		System.out.println("Tests:");
		System.out.println("\t Primary contains three pairs of data/key generated by Sample program.");
		System.out.println("\t Primary index contains 100k records.");
		System.out.println("\t Database directory is deleted upon close.");	
		System.out.println("===================================================================");
		
		

		result = JUnitCore.runClasses(TestKeyRetrieval.class);
		for (Failure failure : result.getFailures()) {
         System.out.println(failure.toString());
      }
		System.out.println("TestKeyRetrieval passed? " + result.wasSuccessful());
		
		result = JUnitCore.runClasses(TestDataRetrieval.class);
		for (Failure failure : result.getFailures()) {
         System.out.println(failure.toString());
      }
		System.out.println("TestDataRetrieval passed? " + result.wasSuccessful());
		
		result = JUnitCore.runClasses(TestRangeSearch.class);
		for (Failure failure : result.getFailures()) {
         System.out.println(failure.toString());
      }
		System.out.println("TestRangeSearch passed? " + result.wasSuccessful());
		

		result = JUnitCore.runClasses(TestAll.class);
		for (Failure failure : result.getFailures()) {
         System.out.println(failure.toString());
      }
		System.out.println("TestAll passed? " + result.wasSuccessful());
   }

	private static class Results{
		
	}
}  	
